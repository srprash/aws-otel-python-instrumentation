# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
version: '3'
services:
  db:
    image: postgres:14.0
    container_name: vehicle_inventory_db
    restart: always
    volumes:
      - data:/var/lib/postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGUSER: ${POSTGRES_USER}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "vehicle_inventory", "-U", "djangouser"]
      timeout: 20s
      retries: 10
    expose:
      - 5432

  instrumentation-backend:
    image: pythonsampleapp/adot-autoinstrumentation-python
    build:
      context: .
      dockerfile: autoinstrumentation/Dockerfile
    volumes:
      - ./autoinstrumentation/.:/autoinstrumentation
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro
    environment:
      OTEL_SMP_ENABLED: "true"
      OTEL_PYTHON_DISTRO: "aws_distro"
      OTEL_PYTHON_CONFIGURATOR: "aws_configurator"
      OTEL_AWS_SMP_EXPORTER_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_TRACES_SAMPLER: "always_on"

  vehicle-inventory-backend:
    image: pythonsampleapp/vehicle-inventory-service
    build:
      context: .
      dockerfile: VehicleInventoryApp/Dockerfile
    container_name: vehicle-inventory-backend
    command: sh -c "python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python3 manage.py runserver 0.0.0.0:8001 --noreload"
    restart: always
    volumes:
      - ./VehicleInventoryApp/.:/vehicle-inventory-app
    environment:
      OTEL_SERVICE_NAME: "VehicleInventoryApp"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_SMP_ENABLED: "true"
      OTEL_PYTHON_DISTRO: "aws_distro"
      OTEL_PYTHON_CONFIGURATOR: "aws_configurator"
      DJANGO_SETTINGS_MODULE: "VehicleInventoryApp.settings"
      OTEL_AWS_SMP_EXPORTER_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_TRACES_SAMPLER: "always_on"
    ports:
      - "8001:8001"
    depends_on:
       db:
          condition: service_healthy

  image-backend:
    image: pythonsampleapp/image-service
    build:
      context: .
      dockerfile: ImageServiceApp/Dockerfile
    container_name: image-service-backend
    command: sh -c "python3 manage.py runserver 0.0.0.0:8000 --noreload"
    restart: always
    volumes:
      - ./ImageServiceApp/.:/image-service-app
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro
    environment:
      OTEL_SERVICE_NAME: "ImageServiceApp"
      OTEL_METRICS_EXPORTER: "none"
      OTEL_SMP_ENABLED: "true"
      OTEL_PYTHON_DISTRO: "aws_distro"
      OTEL_PYTHON_CONFIGURATOR: "aws_configurator"
      DJANGO_SETTINGS_MODULE: "ImageServiceApp.settings"
      OTEL_AWS_SMP_EXPORTER_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://cloudwatch-agent.amazon-cloudwatch:4315"
      OTEL_TRACES_SAMPLER: "always_on"
    ports:
      - "8000:8000"
volumes:
  data:

networks:
  mynet: